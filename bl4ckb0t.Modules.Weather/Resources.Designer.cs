//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bl4ckb0t.Modules.Weather {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Weather.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, I couldn&apos;t find a city named &quot;{0}&quot; {1}.
        /// </summary>
        internal static string cityNotFound {
            get {
                return ResourceManager.GetString("cityNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Humidity:&amp;g {0}.
        /// </summary>
        internal static string humidity {
            get {
                return ResourceManager.GetString("humidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More info at OpenWeatherMap -&amp;g {0}.
        /// </summary>
        internal static string more {
            get {
                return ResourceManager.GetString("more", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some cities, such as Amsterdam, exist multiple times. Please use the country code to specify the city you want: -w amsterdam, nl (This will give you the weather status for Amsterdam in the Netherlands).
        /// </summary>
        internal static string notes {
            get {
                return ResourceManager.GetString("notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressure:&amp;g {0}.
        /// </summary>
        internal static string pressure {
            get {
                return ResourceManager.GetString("pressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %cmd%weather &lt;city&gt;.
        /// </summary>
        internal static string syntax {
            get {
                return ResourceManager.GetString("syntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temperature:&amp;g {0}.
        /// </summary>
        internal static string temperature {
            get {
                return ResourceManager.GetString("temperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last updated:&amp;g {0}.
        /// </summary>
        internal static string updated {
            get {
                return ResourceManager.GetString("updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows you an up-to-date weather report for the given city.
        /// </summary>
        internal static string usage {
            get {
                return ResourceManager.GetString("usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wind:&amp;g {0}.
        /// </summary>
        internal static string wind {
            get {
                return ResourceManager.GetString("wind", resourceCulture);
            }
        }
    }
}
